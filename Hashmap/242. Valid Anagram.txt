1//
class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        for i in t:
            if i in s:
                s=s.replace(i,"",1)
            else:
                return False
        if s=="":
            return True
        else:
            return False
        

2//By Sorting   O(nlogn)
class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
      s=sorted(s)
      t=sorted(t)
      return s==t

3//Dictionary  O(n)
class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        count = defaultdict(int)
        #defaultdict can be useful in scenarios where you're counting occurrences of items or need to initialize values in a dictionary  without explicitly checking for the existence of keys.


        for x in s:
            count[x] += 1
        
        for x in t:
            count[x] -= 1
        for val in count.values():
            if val != 0:
                return False
        return True