# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if not head or not head.next:
            return head
        count,ptr=1,head
        while(ptr.next):
            count+=1
            ptr=ptr.next
        k%=count
        if k==0:
            return head
        tail=head
        for _ in range(count-k-1):
            tail=tail.next
        print(tail.val)
        newhead=tail.next
        tail.next=None
        ptr.next=head
        return newhead