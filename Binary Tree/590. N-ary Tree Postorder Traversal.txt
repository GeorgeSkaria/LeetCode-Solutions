"""
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children
"""

class Solution:
    def postorder(self, root: 'Node') -> List[int]:
        res=[]
        def inorder(node):
            if not node:
                return None
            for i in range(len(node.children)):
                inorder(node.children[i])
            res.append(node.val)
        inorder(root)
        return res
   


ITERATIVE SOLUTION

class Solution:
    def postorder(self, root: 'Node') -> List[int]:
        if not root:
            return []

        stack, res = [root],[]        
        while stack:
            node = stack.pop()
            res.append(node.val)
            stack.extend(node.children) 
        return res[::-1]
             