# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def balanceBST(self, root: TreeNode) -> TreeNode:
        lst=[]
        def inorder(root):
            if not root:
                return None
            inorder(root.left)
            lst.append(root.val)
            inorder(root.right)
        inorder(root)
        
        def balancing(l,r):
            if l>r:
                return None
            mid=(l+r)//2
            node=TreeNode(lst[mid],balancing(l,mid-1),balancing(mid+1,r))
            return node
        return balancing(0,len(lst)-1)

           

        